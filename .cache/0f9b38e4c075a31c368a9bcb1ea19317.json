{"dependencies":[{"name":"babel-runtime/core-js/promise"},{"name":"babel-runtime/regenerator"},{"name":"babel-runtime/helpers/asyncToGenerator"},{"name":"isomorphic-fetch"},{"name":"./cache"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _promise = require(\"babel-runtime/core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _regenerator = require(\"babel-runtime/regenerator\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require(\"babel-runtime/helpers/asyncToGenerator\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _isomorphicFetch = require(\"isomorphic-fetch\");\n\nvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\nvar _cache = require(\"./cache\");\n\nvar _cache2 = _interopRequireDefault(_cache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// We can fetch thru by passing option to config\nvar fetchThru = function () {\n  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(url, _ref2) {\n    var onBeforeCache = _ref2.onBeforeCache;\n    var response, data;\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _isomorphicFetch2.default)(url);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n\n            if (onBeforeCache) data = onBeforeCache(data);\n            _cache2.default.set(url, data);\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined);\n  }));\n\n  return function fetchThru(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = function (url) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return opts.readThru ? fetchThru(url, opts) : new _promise2.default(function (resolve, reject) {\n    _cache2.default.get(url, function (err, value) {\n      return err || value === undefined ? fetchThru(url, opts).then(function (response) {\n        return resolve(response);\n      }).catch(function (error) {\n        return reject(error);\n      }) : resolve(value);\n    });\n  });\n};\n\nmodule.exports = exports[\"default\"];"},"hash":"b003c984a45990f79ef56c64a7182dd4"}